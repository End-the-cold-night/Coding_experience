Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

Input: 123
Output: 321
Example 2:

Input: -123
Output: -321
Example 3:

Input: 120
Output: 21
Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.


已开始没有对x重写一个long long 类型，实际上在 x = -x时候，x = -2147483648就错了


class Solution {
public:
    int reverse(int y) {
        long long ret=0, x=y;
        bool flag = 0;
        if(x<0) {flag = 1; x=-x;}
        while(x){
            ret = ret * 10 + x%10;
            x = x / 10;
        }
        if(flag) ret = -ret;
        return (ret>INT_MAX || ret<INT_MIN)?0:ret;
    }
};


